# Path to the top-level directory containing the analysis results
data_root: run

# Optionally the plots can have a "run name" prefix. If this is not defined the prefix will be "default"
#  Echo'd in when running
# run_name: nml

# The naming convention for the bam files
#  This can use the variables {data_root} (as above) and {sample}
bam_pattern: "{data_root}/{sample}.sorted.bam"

# The naming convention for the consensus sequences
consensus_pattern: "{data_root}/{sample}.consensus.fasta"

# The naming convention for the variants file, NF illumina runs typically use
#   "{data_root}/{sample}.variants.tsv and oxford nanopore runs use "{data_root}/{sample}.pass.vcf.gz"
variants_pattern: "{data_root}/{sample}.pass.vcf.gz"

# Path to the file containing the amplicon regions (not the primer sites, the actual amplicons)
#   Not sure this is needed any more as I believe they added an amplicon create script but in case
#   Pipeline automation always names it to input_amplicon.bed
amplicon_bed: input_amplicon.bed

#
# Path to the BED file containing the primers
#   Pipeline automation always names it to nCoV-2019.bed
primer_bed: nCoV-2019.bed

# List the type of amplicon BED file that will be created from the "primer_bed".  This can include:
#   full -- amplicons including primers and overlaps listed in the primer BED file
#   no_primers -- amplicons including overlaps but with primers removed
#   unique_amplicons -- distinct amplicons regions with primers and overlapping regions removed
bed_type: unique_amplicons

#
# Offset for the amplicons and primers
#
offset: 0

#
# Path to the nCov reference genome
#
reference_genome: nCoV-2019.reference.fasta

# When building a tree of the consensus genomes you can optionally include other sequences
#   in the tree by providing a fasta file here
#tree_include_consensus: some_genomes_from_gisaid.fasta

# Some plots can by annotated with external metadata.
#   This file contains the metadata in simple tab-delimited format
#   with one column being 'sample'
metadata: metadata.tsv

#
# Set this flag to true to include lineage assignments with pangolin in the output plots
#
assign_lineages: true

#
# Set analysis mode for pangolin. Either 'fast' or 'accurate'
#   default is accurate
#
pango_analysis_mode: "accurate"

#
# This flag should identify the sequencing platform used, valid options are:
#   `illumina` or `oxford-nanopore`
#
platform: oxford-nanopore

# Minimum completeness threshold for inclusion to the SNP tree plot
#  If no entry is provided the default is set to 0.75
#  Here it is 0.70 to match pangolin default
completeness_threshold: 0.70

# If a negative control were found, 
# set the names of the negative control(s) below
