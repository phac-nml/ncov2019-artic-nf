// Global default params, used in configs
params {

  // Workflow flags
  outdir = './results'

  // Boilerplate options
  help = false
  tracedir = "${params.outdir}/pipeline_info"

  // cache option makes it a bit easier to set conda or singularity cacheDir
  cache = null
}

// Load base.config by default for all pipelines
includeConfig 'conf/base.config'

// Load either the nanopore or illumina specific config
if ( params.medaka || params.nanopolish ){
  includeConfig 'conf/nanopore.config'
}
if ( params.illumina ){
  includeConfig 'conf/illumina.config'
}

profiles {
  conda {
    conda.enabled = true
    includeConfig 'conf/conda.config'
    if ( params.cache ) {
      conda.cacheDir = params.cache
    }
  }
  mamba {
    conda.enabled = true
    conda.useMamba = true
    includeConfig 'conf/conda.config'
    if ( params.cache ) {
      conda.cacheDir = params.cache
    }
  }
  slurm {
    process.executor = 'slurm'
  }
  lsf {
    process.executor = 'lsf'
  }
  //NML Canada Specific Config
  nml {
    includeConfig 'conf/nml.config'
  }
  // Test config to run tests on github
  test {
    includeConfig 'conf/test.config'
  }
}

// Capture exit codes from upstream processes when piping
process.shell = ['/bin/bash', '-euo', 'pipefail']

def timestamp = new java.util.Date().format( 'yyyy-MM-dd_HH-mm-ss')
timeline {
    enabled = true
    file    = "${params.tracedir}/execution_timeline_${timestamp}.html"
}
report {
    enabled = true
    file    = "${params.tracedir}/execution_report_${timestamp}.html"
}
trace {
    enabled = true
    file    = "${params.tracedir}/execution_trace_${timestamp}.txt"
}
dag {
    enabled = false
    file    = "${params.tracedir}/pipeline_dag_${timestamp}.html"
}

manifest {
  author = 'Matt Bull, PHAC modifications from Darian Hole'
  description = 'Nextflow for running the Artic ncov2019 pipeline'
  mainScript = 'main.nf'
  nextflowVersion = '>=21.04.0'
  version = '1.1.0'
}
